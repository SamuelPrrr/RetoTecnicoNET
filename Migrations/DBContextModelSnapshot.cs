// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetoTecnico.Models;

#nullable disable

namespace RetoTecnico.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RetoTecnico.Models.Alhaja", b =>
                {
                    b.Property<int>("AlhajaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AlhajaID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<decimal>("PesoKG")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AlhajaID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Alhaja");
                });

            modelBuilder.Entity("RetoTecnico.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("RetoTecnico.Models.Folio", b =>
                {
                    b.Property<int>("FolioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FolioID"));

                    b.Property<int>("AlhajaID")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaLiquidacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaOperacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Interes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoEmpeño")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoInteres")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioGramo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FolioID");

                    b.HasIndex("AlhajaID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Folios");
                });

            modelBuilder.Entity("RetoTecnico.Models.Alhaja", b =>
                {
                    b.HasOne("RetoTecnico.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("RetoTecnico.Models.Folio", b =>
                {
                    b.HasOne("RetoTecnico.Models.Alhaja", "Alhaja")
                        .WithMany()
                        .HasForeignKey("AlhajaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetoTecnico.Models.Cliente", null)
                        .WithMany("Folios")
                        .HasForeignKey("ClienteID");

                    b.Navigation("Alhaja");
                });

            modelBuilder.Entity("RetoTecnico.Models.Cliente", b =>
                {
                    b.Navigation("Folios");
                });
#pragma warning restore 612, 618
        }
    }
}
